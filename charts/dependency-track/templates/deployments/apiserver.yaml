apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dependency-track.fullname" . }}-apiserver
  labels:
{{ include "dependency-track-apiserver.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.apiserver.replicaCount }}
  {{- if .Values.apiserver.persistentVolume.enabled }}
  strategy:
    type: Recreate
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "dependency-track.name" . }}-apiserver #This reference to the label fucks up NodePort in a huge way, as the selector picks both the APIServer and the Frontend pods as Endpoints.
      app.kubernetes.io/instance: {{ .Release.Name }}-apiserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "dependency-track.name" . }}-apiserver
        app.kubernetes.io/instance: {{ .Release.Name }}-apiserver
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "dependency-track-apiserver.serviceAccountName" . }}
      securityContext: {{- toYaml .Values.apiserver.podSecurityContext | nindent 8 }}
    {{- with .Values.apiserver.initContainers }}
      initContainers: {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}-apiserver
          securityContext: {{- toYaml .Values.apiserver.securityContext | nindent 12 }}
          image: "{{ .Values.apiserver.image.repository }}:{{ .Values.apiserver.image.tag }}"
          imagePullPolicy: {{ .Values.apiserver.image.pullPolicy }}
          env:
          - name: ALPINE_DATA_DIRECTORY
            value: "/data"
          {{- if .Values.postgresql.enabled }}
          - name: ALPINE_DATABASE_MODE
            value: "external"
          - name: ALPINE_DATABASE_DRIVER
            value: "org.postgresql.Driver"
          - name: ALPINE_DATABASE_DRIVER_PATH
            value: "/extlib/postgresql-42.2.5.jar"
          - name: ALPINE_DATABASE_URL
            value: jdbc:postgresql://{{ .Release.Name }}-postgresql/{{ .Values.postgresql.postgresqlDatabase }}
          - name: ALPINE_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-postgresql
                key: postgresql-password
          - name: ALPINE_DATABASE_USERNAME
            value: {{ .Values.postgresql.postgresqlUsername }}
          {{- end }}
          {{- with .Values.apiserver.env }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          volumeMounts:
          - name: data
            mountPath: /data
          ports:
            - name: api
              containerPort: 8081
              protocol: TCP
      volumes:
        - name: data
          {{- if .Values.apiserver.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.apiserver.persistentVolume.existingClaim }}{{ .Values.apiserver.persistentVolume.existingClaim }}{{- else }}{{ template "dependency-track.fullname" . }}-apiserver {{- end }}
          {{- else }}
          emptyDir:
          {{- if .Values.apiserver.emptyDir.sizeLimit }}
            sizeLimit: {{ .Values.apiserver.emptyDir.sizeLimit }}
          {{- else }}
            {}
          {{- end -}}
          {{- end }}